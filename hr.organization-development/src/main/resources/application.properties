server.port=8885
spring.application.name=organization-development

logging.pattern.console=[Organization Development] %clr(%d{HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:%5p}) %clr(---){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}

spring.datasource.url=jdbc:postgresql://localhost:5432/spring_microservice_db
spring.datasource.username=springuser
spring.datasource.password=springpass
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=create
spring.jpa.properties.hibernate.default_schema=organization_development

spring.main.banner-mode=off

spring.devtools.restart.additional-paths=conf/**

spring.kafka.listener.missing-topics-fatal=false
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.group-id=organization-development-cg
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.cloud.consul.discovery.prefer-ip-address=true
spring.cloud.consul.discovery.health-check-path=/ping
spring.cloud.consul.discovery.instance-id=organization-development-${random.int}

resilience4j.circuitbreaker.configs.default.register-health-indicator=true
resilience4j.circuitbreaker.configs.default.minimum-number-of-calls=10
resilience4j.circuitbreaker.configs.default.failure-rate-threshold=50
resilience4j.circuitbreaker.configs.default.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.configs.default.wait-duration-in-open-state=30s
resilience4j.circuitbreaker.configs.default.record-exceptions=feign.RetryableException
resilience4j.retry.configs.default.max-attempts=3
resilience4j.retry.configs.default.wait-duration=5s

management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true

